<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[清除浮动的方法和原理]]></title>
    <url>%2F%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95%E5%92%8C%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[今天把清除浮动的所有方法总结一下，并分析一下他们的优缺点。然后找出当下最适合的清除浮动的方法（时间紧张的同学可以直接跳到最后 Orz）。 1）在浮动元素末尾添加额外标签a.添加空标签 &lt;div>示例：123456&lt;div class="clearfix"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 这是最早也是最简单的清除浮动的方法。但是在现在看来，这个方法会徒增许多无意义的空标签，有违结构与表现的分离，所以不推荐。 b.使用 &lt;br> 标签示例：123456&lt;div class="clearfix"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;br clear="all"&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 这个方法比较小众，&lt;br&gt; 标签自带有 html 属性 clear ，他有三个可选值：left、right 和 all。他比 &lt;div&gt; 空标签的语义稍强，但他同样有违结构与表现的分离，随意也不推荐。 2）为父元素添加属性 overflow / float 这里涉及到一个知识点：BFC（ Block formatting contexts ）BFC：全称块级格式化上下文。用于对块级元素排版，默认情况下只有根元素（body）一个块级上下文。当触发以下条件时，会为块级元素生成一个独立的块级上下文： float 除了 none 以外的值 overflow 除了 visible 以外的值（hidden，auto，scroll ） display (table-cell，table-caption，inline-block) position（absolute，fixed） fieldset 元素 BFC 的特性： BFC 会阻止外边距叠加正常情况下，同一个 BFC 下两个子块级元素的垂直方向 margin 会发生叠加，而两个不同的 BFC 下的子元素之间就不会发生这种情况。 BFC 不会重叠浮动元素浏览器会给 BFC 创建隐式的 margin 来阻止他和其子浮动元素的 margin 叠加 BFC 通常可以包含浮动BFC 下的子浮动元素也会参与高度计算 a.overflow: hidden示例：12345&lt;div class="clearfix" style="overflow:hidden; *zoom:1;"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 通过为父元素添加 overflow 属性并设置值 hidden，在IE6中还需要触发 hasLayout ，例如 zoom：1；然后使其变为一个 BFC，只要没有为父元素设置固定高度，浮动元素就会被包含在内，从而完成浮动的清除。不过这个方法在内容增多时可能会导致内容被裁剪，因此建议少用。 b.overflow: auto示例：12345&lt;div class="clearfix" style="overflow:auto; *zoom:1;"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 这个方法在多个嵌套后，firefox某些情况会造成内容全选；IE中 mouseover 造成宽度改变时会出现最外层模块有滚动条等；firefox早期版本会无故产生focus等；因此也不建议使用。 c.float在父元素上同样加上浮动属性也可以清除浮动，但是这样会使与父元素相邻的元素布局受到影响，总不能一直浮动到 body，因此也不推荐使用。 3）在直接父元素上使用 :after 伪元素示例：123456&lt;div class="clearfix"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;br clear="all" /&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 12345678910.clearfix:after &#123; content: "."; //content可以任意发挥 visibility:hidden; //隐藏 content 内容 display: block; //使生成的元素以块级元素显示,占满剩余空间 height: 0; //height: 0也行，避免生成的内容破坏原有布局高度 clear: both;&#125;.clearfix &#123; zoom: 1; //触发 IE hasLayout&#125; 这个方法就是通过 :after 伪元素在浮动元素直接父元素的最后添加了一个内容为 “.” 的块级元素。与我们最开始使用的添加空标签 &lt;div&gt; 的方法相似，并且语义化完全正确，因此十分推荐。不过要注意的一点，只有在父元素确定高度时才能使用哦。 小结总共分析了 6 种清除浮动的方法，并找出了最符合语义化，同时被各大浏览器所接受的方法——使用 :after 伪元素。因此，为了避免不必要的 bug，以及方便后期的维护，希望大家都能用起来。]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>float</tag>
        <tag>clear</tag>
        <tag>清除浮动</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML5]]></title>
    <url>%2FHTML5%2F</url>
    <content type="text"><![CDATA[在杠姐这首曲子下写作都变得特别有 feel 这个博客建了也有一段日子了，本意是想给自己一个输出的空间，但拖延症都快使我忘记了它。 HTML 5之前只学习了 HTML 的基础概念，今天了解到了 HTML5 的一些新特性与新标准。 新语义标签 对页面的不同部分增加了一些新语义标签 * &lt;article&gt; &lt;!--定义文章--&gt; * &lt;aside&gt; &lt;!--定义页面内容以外的内容--&gt; * &lt;details&gt; &lt;!--定义用户能够查看或者隐藏的细节--&gt; * &lt;figcaption&gt; &lt;!--定义 &lt;figure&gt; 元素的标题--&gt; * &lt;figure&gt; &lt;!--定义自包含内容，如图示、图表、照片、代码清单等--&gt; * &lt;footer&gt; &lt;!--定义文档或节的页脚--&gt; * &lt;header&gt; &lt;!--定义文档或节的页眉--&gt; * &lt;main&gt; &lt;!--定义文档的主内容--&gt; * &lt;mark&gt; &lt;!--定义重要或强调的文本--&gt; * &lt;nav&gt; &lt;!--定义导航链接--&gt; * &lt;section&gt; &lt;!--定义文档中的节（节是有主题的内容组，通常有标题）--&gt; * &lt;summary&gt; &lt;!--定义 &lt;details&gt; 元素的可见标题--&gt; * &lt;time&gt; &lt;!--定义日期或时间--&gt; 新表单新表单类型 * email &lt;!--只能输入email格式，自动带有验证功能 --&gt; * tel &lt;!--手机号码--&gt; * url &lt;!--只能输入url 格式--&gt; * number &lt;!--只能输入数字--&gt; * search &lt;!--搜索框--&gt; * range &lt;!--滑动条--&gt; * color &lt;!--拾色器--&gt; * time &lt;!--时间--&gt; * date &lt;!--日期--&gt; * --datetime &lt;!--时间日期--&gt; * month &lt;!--月份--&gt; * week &lt;!--星期--&gt; 新表单元素（标签）&lt;datalist&gt; 数据列表可以为 input 输入框添加自动提示 eg. 123456&lt;input type="text" list="myData"&gt; //把 input 中的 list 属性与 datalist 进行绑定&lt;datalist id="myData"&gt;&lt;option&gt;本科&lt;/option&gt;&lt;option&gt;研究生&lt;/option&gt;&lt;option&gt;不明&lt;/option&gt;&lt;/datalist&gt; 效果如下： 新表单属性 * placeholder &lt;!--占位符（提示文字）--&gt; * autofocus &lt;!--自动获取焦点--&gt; * multiple &lt;!--文件上传多选或多个邮箱地址--&gt; * autocomplete &lt;!--自动完成（填充的）。on 开启（默认），off 取消。用于表单元 素，也可用于表单自身(on/off)--&gt; * form &lt;!--指定表单项属于哪个form，处理复杂表单时会需要--&gt; * novalidate &lt;!--关闭默认的验证功能（只能加给form）--&gt; * required &lt;!--表示必填项--&gt; * pattern &lt;!--自定义正则，验证表单--&gt; 多媒体音频 &lt;audio&gt;1&lt;audio src="music/yinyue.mp3" autoplay controls&gt; &lt;/audio&gt; * autoplay &lt;!--自动播放，写成 autoplay 或者 autoplay = &quot;&quot;，都可以--&gt; * controls &lt;!--控制条（建议把这个选项写上，不然都看不到控件在哪里）--&gt; * loop &lt;!--循环播放--&gt; * preload &lt;!--预加载 同时设置 autoplay 时，此属性将失效--&gt; 音频格式的兼容性写法 123456&lt;audio controls loop&gt; &lt;source src="music/yinyue.mp3"/&gt; &lt;source src="music/yinyue.ogg"/&gt; &lt;source src="music/yinyue.wav"/&gt; 抱歉，你的浏览器暂不支持此音频格式&lt;/audio&gt; 视频 &lt;video&gt;1&lt;video src="video/movie.mp4" controls autoplay&gt;&lt;/video&gt; * autoplay &lt;!--自动播放，写成 autoplay 或者 autoplay = &quot;&quot;，都可以--&gt; * controls &lt;!--控制条（建议把这个选项写上，不然都看不到控件在哪里）--&gt; * loop &lt;!--循环播放--&gt; * preload &lt;!--预加载 同时设置 autoplay 时，此属性将失效--&gt; * width &lt;!--设置播放窗口宽度--&gt; * height &lt;!--设置播放窗口的高度--&gt; 视频格式的兼容性写法 123456&lt;video controls autoplay&gt; &lt;source src="video/movie.mp4"/&gt; &lt;source src="video/movie.ogg"/&gt; &lt;source src="video/movie.webm"/&gt; 抱歉，不支持此视频&lt;/video&gt; 思维导图关于 HTML5 还有一些其他的知识，在我总结的思维导图里比较全。 链接：https://pan.baidu.com/s/1Ae_6sdNWKqyQJ4XbOeS8bQ 密码：3qwe]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
</search>

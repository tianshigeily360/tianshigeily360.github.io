<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[清除浮动的方法和原理]]></title>
    <url>%2F%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95%E5%92%8C%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[今天把清除浮动的所有方法总结一下，并分析一下他们的优缺点。然后找出当下最适合的清除浮动的方法（时间紧张的同学可以直接跳到最后 Orz）。 1）在浮动元素末尾添加额外标签 a.添加空标签 &lt;div>示例：123456&lt;div class="clearfix"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 这是最早也是最简单的清除浮动的方法。但是在现在看来，这个方法会徒增许多无意义的空标签，有违结构与表现的分离，所以不推荐。 b.使用 &lt;br> 标签示例：123456&lt;div class="clearfix"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;br clear="all" /&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 这个方法比较小众，&lt;br&gt; 标签自带有 html 属性 clear ，他有三个可选值：left、right 和 all。他比 &lt;div&gt; 空标签的语义稍强，但他同样有违结构与表现的分离，随意也不推荐。 2）为父元素添加属性 overflow / float 这里涉及到一个知识点：BFC（ Block formatting contexts ）BFC：全称块级格式化上下文。用于对块级元素排版，默认情况下只有根元素（body）一个块级上下文。当触发以下条件时，会为块级元素生成一个独立的块级上下文： float 除了 none 以外的值 overflow 除了 visible 以外的值（hidden，auto，scroll ） display (table-cell，table-caption，inline-block) position（absolute，fixed） fieldset 元素 BFC 的特性： BFC 会阻止外边距叠加正常情况下，同一个 BFC 下两个子块级元素的垂直方向 margin 会发生叠加，而两个不同的 BFC 下的子元素之间就不会发生这种情况。 BFC 不会重叠浮动元素浏览器会给 BFC 创建隐式的 margin 来阻止他和其子浮动元素的 margin 叠加 BFC 通常可以包含浮动BFC 下的子浮动元素也会参与高度计算 a.overflow: hidden示例：12345&lt;div class="clearfix" style="overflow:hidden; *zoom:1;"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 通过为父元素添加 overflow 属性并设置值 hidden，在IE6中还需要触发 hasLayout ，例如 zoom：1；然后使其变为一个 BFC，只要没有为父元素设置固定高度，浮动元素就会被包含在内，从而完成浮动的清除。不过这个方法在内容增多时可能会导致内容被裁剪，因此建议少用。 b.overflow: auto示例：12345&lt;div class="clearfix" style="overflow:auto; *zoom:1;"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 这个方法在多个嵌套后，firefox某些情况会造成内容全选；IE中 mouseover 造成宽度改变时会出现最外层模块有滚动条等；firefox早期版本会无故产生focus等；因此也不建议使用。 c.float在父元素上同样加上浮动属性也可以清除浮动，但是这样会使与父元素相邻的元素布局受到影响，总不能一直浮动到 body，因此也不推荐使用。 3）在直接父元素上使用 :after 伪元素示例：123456&lt;div class="clearfix"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;br clear="all" /&gt;&lt;/div&gt;&lt;div class="footer"&gt;&lt;/div&gt; 123456789.clearfix:after &#123; content: "."; //content可以任意发挥 display: block; //使生成的元素以块级元素显示,占满剩余空间 line-height: 0; //height: 0也行，避免生成的内容破坏原有布局高度 clear: both;&#125;.clearfix &#123; zoom: 1; //触发 IE hasLayout&#125; 这个方法就是通过 :after 伪元素在浮动元素直接父元素的最后添加了一个内容为 “.” 的块级元素。与我们最开始使用的添加空标签 &lt;div&gt; 的方法相似，并且语义化完全正确，因此十分推荐。 小结总共分析了 6 种清除浮动的方法，并找出了最符合语义化，同时被各大浏览器所接受的方法——使用 :after 伪元素。因此，为了避免不必要的 bug，以及方便后期的维护，希望大家都能用起来。]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>float</tag>
        <tag>clear</tag>
        <tag>清除浮动</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记百度前端 IFE 学院的第一天]]></title>
    <url>%2F%E7%99%BE%E5%BA%A6%20IFE%201%2F</url>
    <content type="text"><![CDATA[在杠姐这首曲子下写作都变得特别有 feel 这个博客建了也有一段日子了，本意是想给自己一个输出的空间，但拖延症都快使我忘记了它。那么借着在百度前端学院学习的日子，好好记录一下自己吧！今天主要是将课程中提供的资料阅读一遍，对基础又加深了一些了解。 不过只花了不到两个小时的时间粗读了一遍，以后还要常翻出来看看。 名词的梳理首先要感谢 @知乎张秋怡 的回答，简直对小白太友好了。 前后端的交互 她对于后端的解释让我耳目一新，之前因为只关注前端，所以对后端只是有一个模糊的认识。 浏览器与服务器之间的请求与交互是比较有趣的，他们之间需要指定一种协议（比如 HTTP/HTTPS）和一种数据封装格式（比如 HTML/XML）才能达成交互，这与我们写的前端代码要定下一定的标准比较相像。不过这些都是冰山一角，在以后的学习过程中会逐渐对这些知识产生更深的理解。 HTML 5之前只学习了 HTML 的基础概念，今天了解到了 HTML5 的一些新特性与新标准。 HTML5 Canvas 这个元素可以在网页进行一些动画制作 HTML5 新语义 对页面的不同部分增加了一些新语义 * &lt;article&gt; * &lt;aside&gt; * &lt;details&gt; * &lt;figcaption&gt; * &lt;figure&gt; * &lt;footer&gt; * &lt;header&gt; * &lt;main&gt; * &lt;mark&gt; * &lt;nav&gt; * &lt;section&gt; * &lt;summary&gt; * &lt;time&gt;]]></content>
      <categories>
        <category>披星戴月，沉迷学习</category>
      </categories>
      <tags>
        <tag>百度前端学院</tag>
        <tag>IFE</tag>
      </tags>
  </entry>
</search>
